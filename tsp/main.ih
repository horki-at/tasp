#include "graph/graph.h"
#include "solve/solve.h"
#include "path/path.h"

#include <time.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>
#include <getopt.h>

typedef enum
{
	ACTION_PLOT,									// plot temperature - cost
	ACTION_SOLVE,                 // print the resulting path
	ACTION_SOLVE_VIS,             // visualize the resulting path
	ACTION_GRAPH,									// print the resulting graph
	ACTION_GRAPH_VIS,							// visualize the resulting graph (with labels)
  ACTION_GRAPH_VIS_NOL,         // visualize the resulting graph (no labels)
  ACTION_DISTANCES,             // print the distances matrix of the graph
  ACTION_INVALID,
} Action;


typedef enum 
{
	MODE_RANDOM,									// generate cities randomly
	MODE_STDIN,										// input cities via stdin
	MODE_INVALID,
} Mode;

typedef struct
{
	int ok;												// if parsing is successful
	size_t argc;									// number of variadic arguments (...args)
	char **argv;									// variadic arguments (...args)
	Mode mode;										// input mode for vertices
	Action action; 								// action to perform
	size_t seed;									// seed for random number generator
	size_t size;                  // #vertices to randomly generate
	int min;											// min possible coordinate
	int max;											// max possible coordinate
	float T;											// temperature for SA
	float T_aim;									// desired temperature for SA
	size_t m;											// m-parameter for SA
	size_t noimpr_aim;            // desired #iterations with no improvement
  char *output;                 // .png file where vis will be displayed
} Config;

void usage(char const *progname);
Config parse_arguments(int argc, char **argv); 

void execute(Config const *config);

Graph graph_create(Config const *config); 
void action_plot(Config const *config, Graph graph);
void action_solve(Config const *config, Graph graph);
void action_solve_vis(Config const *config, Graph graph);
void action_graph(Config const *config, Graph graph);
void action_graph_vis(Config const *config, Graph graph);
void action_graph_vis_nol(Config const *config, Graph graph);
void action_distances(Config const *config, Graph graph);

void run_gnuplot(char const *script, char const *outfile);